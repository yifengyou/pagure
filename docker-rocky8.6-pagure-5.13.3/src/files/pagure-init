#!/bin/bash

function status () {
    for name in $@; do \
      echo ${name} $(systemctl is-active ${name}) $(systemctl is-enabled ${name}); \
      done | column -t | grep --color=always '\(disabled\|inactive\|$\)'
}

timedatectl set-timezone Asia/Shanghai

mount -t tmpfs -o size=8G tmpfs /tmp || true

mkdir -p /etc/pagure || true
mkdir -p /var/log/pagure || true
mkdir -p /home/git/releases || true
mkdir -p /home/git/pesudo_folder || true
mkdir -p /home/git/remote_git_folder || true
mkdir -p /home/git/db || true

# close registration email confirm
sed -i 's/user.token = token/user.token = ""/g' /usr/lib/python3.6/site-packages/pagure/ui/login.py

chown git:git -R /var/log/pagure
chown git:git -R /home/git

systemctl disable --now firewalld &> /dev/null || true
setenforce 0 &> /dev/null || true
getenforce 

# init gitolite
if [ ! -f /home/git/.ssh/admin.pub ]
then
    su git -c "cd /home/git ; git config --global init.defaultBranch master"
    su git -c "cd /home/git ; ssh-keygen -f /home/git/.ssh/admin -t rsa -N ''"
    su git -c "cd /home/git ; gitolite setup -pk /home/git/.ssh/admin.pub "
    #su git -c "cd /home/git ; gitolite compile && HOME=/home/git/ gitolite trigger POST_COMPILE"
fi

if [ -d /etc/my.cnf.d ]
then
	cat > /etc/my.cnf.d/mysql-server.cnf << EOF
#
# This group are read by MySQL server.
# Use it for options that only the server (but not clients) should see
#
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/en/server-configuration-defaults.html

# Settings user and group are ignored when systemd is used.
# If you need to run mysqld under a different user or group,
# customize your systemd unit file for mysqld according to the
# instructions in http://fedoraproject.org/wiki/Systemd

[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
log-error=/var/log/mysql/mysqld.log
pid-file=/run/mysqld/mysqld.pid

max_connections=1024
group_concat_max_len=10240
mysqlx_max_connections=1024
wait_timeout=2880000
interactive_timeout=2880000
EOF

fi

systemctl enable --now mysqld
mysql --user=root <<_EOF_
USE mysql;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password by 'paguremysql';
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
DROP DATABASE IF EXISTS test;
DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
FLUSH PRIVILEGES;
CREATE DATABASE pagure;
_EOF_
su git -c "python3 /usr/share/pagure/pagure_createdb.py  -c /etc/pagure/pagure.cfg -i /etc/pagure/alembic.ini"
# alter table projects change mirrored_from_last_log mirrored_from_last_log longtext;

systemctl daemon-reload
systemctl enable --now pagure_worker.service pagure_gitolite_worker.service pagure_docs_web pagure_web pagure_mirror
systemctl enable --now pagure_mirror_project_in.timer
systemctl enable --now redis nginx sshd

for srv in `cat /etc/pagure/service`
do
    status $srv
done
netstat -anpt |grep 8880


cat >> /root/.bashrc << EOF
# github.com/yifengyou/bash
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias l.='ls -d .* -a --color=auto'
alias ll='ls -l -h -a --color=auto'
alias ls='ls -a --color=auto'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias xzegrep='xzegrep --color=auto'
alias xzfgrep='xzfgrep --color=auto'
alias xzgrep='xzgrep --color=auto'
alias zegrep='zegrep --color=auto'
alias zfgrep='zfgrep --color=auto'
alias zgrep='zgrep --color=auto'
alias push='git push'


# History setting
export PROMPT_COMMAND="history -a"
export HISTTIMEFORMAT="%F %T "
export HISTSIZE=10000

# Proxy settings
#export http_proxy='127.0.0.1:5050'
#export https_proxy='127.0.0.1:5050'
#export ftp_proxy='127.0.0.1:5050'

#export http_proxy=
#export https_proxy=
#export ftp_proxy=

PS1='\[\e[32;1m\][\[\e[31;1m\]\u\[\e[33;1m\]@\[\e[35;1m\]\h\[\e[36;1m\] \w\[\e[32;1m\]]\[\e[37;1m\]\\\$\[\e[0m\] '
EOF

cp /root/.bashrc /home/git/.bashrc
chown git:git /home/git/.bashrc

# disable gitolite auth
sed -i 's/_die $ret/#_die $ret/g' /usr/share/gitolite3/gitolite-shell 

cp ~/.bashrc /home/git/.bashrc
chown git:git -R /home/git
echo "All done! All ok! Enjoy ~~~"
